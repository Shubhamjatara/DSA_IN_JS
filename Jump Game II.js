/**
 * @param {number[]} nums
 * @return {number}
 */
var jump = function (nums) {
  const dp = new Array(nums.length).fill(-1);
  return f(0, nums, dp);
};

function f(ind, nums, dp) {
  if (ind >= nums.length - 1) return 0;
  if (dp[ind] != -1) return dp[ind];
  let min = Number.MAX_SAFE_INTEGER;
  const jump = nums[ind];
  for (let i = 1; i <= jump; i++) {
    min = Math.min(min, 1 + f(ind + i, nums, dp));
  }

  return (dp[ind] = min);
}

console.log(jump([2, 3, 1, 1, 4]));
console.log(jump([2, 3, 0, 1, 4]));
console.log(jump([0]));
console.log(jump([4, 1, 0, 5, 0, 0, 0, 2]));
console.log(
  jump([
    32, 29, 32, 7, 24, 31, 7, 19, 23, 6, 35, 24, 12, 34, 12, 5, 18, 33, 2, 28,
    16, 9, 35, 26, 26, 16, 5, 25, 24, 30, 12, 22, 19, 33, 5, 6, 23, 3, 24, 21,
    35, 25, 21, 10, 6, 0, 11, 35, 18, 27, 0, 19, 35, 33, 10, 34, 12, 34, 16, 14,
    27, 22, 35, 34, 34, 17, 16, 0, 14, 32, 5, 12, 9, 15, 29, 28, 29, 8, 3, 5,
    20, 4, 9, 24, 24, 5, 7, 8, 14, 17, 26, 28, 11, 5, 20, 0, 14, 3, 29, 20, 5,
    27, 23, 28, 11, 3, 32, 25, 3, 25, 10, 12, 26, 24, 15, 7, 32, 6, 26, 25, 18,
    19, 0, 3, 4, 10, 14, 6, 15, 3, 23, 2, 34, 21, 11, 27, 11, 5, 4, 3, 14, 23,
    12, 22, 7, 21, 23, 18, 21, 4, 35, 7, 14, 1, 35, 21, 21, 8, 1, 35, 24, 5, 20,
    7, 24, 19, 16, 10, 14, 4, 8, 6, 35, 4, 27, 24, 7, 27, 35, 22, 19, 35, 4, 23,
    28, 17, 34, 22, 2, 18, 2, 12, 19, 14, 34, 23, 0, 32, 10, 28, 26, 18, 32, 32,
    33, 28, 27, 18, 6, 16, 3, 7, 35, 2, 12, 24, 19, 7, 6, 5, 2, 28, 19, 12, 19,
    27, 17, 14, 20, 12, 23, 30, 35, 7, 34, 28, 16, 14, 6, 5, 6, 34, 25, 29, 30,
    24, 8, 22, 21, 17, 8, 24, 28, 0, 2, 26, 0, 6, 0, 23, 32, 2, 13, 9, 1, 31,
    30, 35, 9, 7, 25, 5, 1, 7, 8, 18, 6, 1, 34, 28, 35, 3, 17, 22, 33, 4, 24, 3,
    13, 27, 9, 31, 5, 0, 9, 29, 16, 0, 16, 2, 19, 14, 16, 27, 4, 28, 8, 12, 21,
    20, 34, 32, 34, 15, 13, 3, 32, 31, 8, 35, 21, 17, 35, 9, 26, 4, 14, 32, 34,
    24, 11, 25, 18, 13, 3, 29, 4, 19, 14, 16, 15, 16, 19, 16, 20, 5, 18, 17, 26,
    31, 7, 8, 31, 32, 15, 12, 22, 3, 34, 16, 9, 8, 28, 11, 35, 23, 16, 6, 5, 8,
    19, 22, 33, 10, 29, 22, 34, 15, 11, 11, 34, 11, 5, 4, 27, 5, 20, 5, 9, 27,
    7, 3, 7, 30, 14, 13, 33, 20, 3, 7, 18, 0, 0, 13, 10, 20, 9, 20, 1, 15, 7, 7,
    4, 35, 28, 12, 24, 17, 24, 33, 22, 8, 20, 17, 25, 21, 24, 23, 3, 29, 26, 26,
    12, 14, 2, 25, 4, 18, 10, 20, 26, 25, 12, 9, 31, 22, 32, 12, 31, 10, 27, 4,
    2, 8, 4, 30, 12, 12, 15, 0, 4, 12, 32, 15, 33, 3, 13, 25, 27, 5, 35, 14, 3,
    21, 0, 7, 4, 10, 15, 28, 18, 7, 16, 17, 0, 29, 34, 22, 31, 20, 32, 15, 32,
    31, 26, 10, 20, 3, 14, 6, 17, 26, 5, 2, 2, 13, 20, 7, 26, 14, 16, 31, 7, 16,
    17, 28, 35, 32, 1, 12, 19, 8, 7, 4, 29, 10, 33, 20, 22, 0, 5, 5, 28, 8, 32,
    29, 5, 9, 0, 20, 29, 23, 22, 2, 4, 16, 8, 25, 30, 10, 25, 19, 4, 14, 9, 6,
    15, 32, 9, 15, 23, 17, 32, 33, 35, 15, 25, 4, 34, 2, 32, 8, 19, 16, 26, 7,
    20, 34, 4, 28, 9, 20, 24, 28, 0, 15, 3, 23, 6, 6, 13, 0, 25, 17, 3, 32, 30,
    11, 31, 19, 2, 7, 19, 29, 6, 32, 26, 18, 25, 29, 35, 23, 6, 27, 15, 8, 31,
    10, 21, 3, 24, 29, 21, 9, 15, 3, 12, 35, 25, 24, 28, 26, 18, 5, 15, 8, 16,
    0, 29, 28, 23, 7, 2, 32, 31, 3, 9, 30, 23, 13, 17, 2, 2, 30, 14, 19, 23, 0,
    18, 2, 24, 23, 4, 23, 29, 0, 33, 10, 22, 10, 19, 1, 27, 27, 9, 3, 26, 13,
    31, 18, 30, 15, 25, 16, 27, 10, 23, 21, 20, 2, 34, 23, 25, 8, 33, 12, 28,
    10, 8, 15, 16, 33, 15, 21, 7, 22, 32, 7, 7, 29, 29, 19, 33, 14, 12, 11, 27,
    12, 15, 1, 22, 17, 3, 10, 34, 8, 19, 11, 8, 25, 1, 22, 20, 33, 34, 34, 33,
    15, 22, 0, 4, 20, 21, 15, 1, 10, 13, 6, 10, 35, 22, 0, 29, 15, 3, 21, 6, 14,
    7, 13, 28, 4, 18, 1, 10, 9, 3, 30, 18, 10, 10, 1, 26, 32, 6, 7, 5, 27, 32,
    1, 21, 4, 27, 23, 17, 14, 30, 20, 26, 12, 27, 0, 9, 16, 25, 7, 28, 33, 16,
    33, 20, 11, 9, 8, 21, 26, 19, 11, 33, 6, 7, 15, 20, 16, 2, 3, 21, 21, 0, 27,
    10, 25, 9, 13, 24, 4, 26, 23, 12, 33, 30, 21, 6, 2, 23, 9, 22, 24, 33, 22,
    35, 11, 27, 29, 32, 13, 10, 28, 35, 32, 14, 14, 6, 31, 4, 14, 15, 28, 18,
    27, 19, 12, 20, 29, 22, 9, 30, 28, 17, 33, 33, 16, 7, 27, 24, 21, 29, 1, 11,
    28, 16, 6, 28, 6, 17, 15, 34, 3, 17, 3, 19, 18, 33, 18, 30, 10, 6, 24, 11,
    10, 31, 30, 0, 6, 20, 22, 16, 17, 3, 12, 24, 27, 2, 16, 34, 30, 13, 3, 19,
    8, 0, 10, 34, 4, 16, 10, 32, 18, 4, 6, 2, 25, 35, 35, 21, 6, 18, 3, 26, 0,
    15, 16,
  ])
);
